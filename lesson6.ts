
// const func = (str:string):null|number => {
//     return 315;
// }
//
//
// func('olejo')

// | ----дає зрозуміти що тип даних може бути або ... або ...;


// ---------------------------------------------------------------------------------------------------------------------------

// const user:{name:string,age:number,status?:boolean}={name:'Olejo',age:31}

// ? Одноокий Елвіс дає зрозуміти що у нам може бути цей ключ(status) із таким значенням або і не може його бути.

// Але такий тип відображення не дуже зручний, тому краще його виводити за допомогою ІНТЕРФЕЙСІВ АБО КЛАСІВ

// --------------------------------------------ВИВІД З ДОПОМОГОЮ ІНТЕРФЕЙСІВ-----------------------------------------------------

// 1.Створюємо нову папку interface.
// 2. Створюємо в ній файл тайпскріпта user.inerface.
// 3. Експортуємо в цьому файлі наш інтерфейс. Зазвичай прийнято називати інтерфейс з великої букви I.


// import {Iuser} from "./interface/user.interface";
//
// const user: Iuser = {name: 'Olejo', age: 31, status: true};




// можна передати Iuser в функцію(фле обовязко щоб значення було ним протипізовано):

// const usetCounter =(user:Iuser):Iuser=>{
//     return user;
// }
//
// usetCounter({name: 'Vasya', age: 50, status: true});

// ---------------------------------------------------------------------------------------------------------------------------

// можна передавати часткову типізацію через Partial <Iuser>(ця штукка огортання в скобки називається generic)
// Тобто тепер це означає що в нашому юзері всюди в ключах стоять ще Елвіси.
// Тобто можна якісь дані не передавати і все буде добре. Але якісь нові додавати ключі з даними не можна(тобто тих яких немає в Iuser)

// const usetCounter =(user:Partial<Iuser>):Partial<Iuser>=>{
//     return user;
// }
//
// usetCounter({name: 'Vasya'});

// ---------------------------------------------------------------------------------------------------------------------------

// Перенесемо логіку в якийсь запит

// Створимо ной інтерфейс user.uinterface2 з даними з https://jsonplaceholder.typicode.com/

// В нього пропишемо опис даних об'єкта з https://jsonplaceholder.typicode.com/

// Створимо папку service, а в ній файл user.service


import {IuserTwo} from "./interface/user.interface2";
import {userService} from "./service/user.service";

userService.getAll().then(value=>value.data).then(users=>{

    for (let user of users) {
        console.log(user.name)
    }
})










